CALL gds.graph.create(
  'Testgraph',
  ['ANAT', 'DISO', 'GENE', 'GENO', 'NA', 'PHYS', 'VARI'],
  ['BFO:0000050', 'GENO:0000222', 'GENO:0000408', 'GENO:0000418', 'GENO:0000840', 'GO:0010629', 'MI_0914', 'RO:0002200', 'RO:0002206', 'RO:0002325', 'RO:0002326', 'RO:0002327', 'RO:0002331', 'RO:0002434', 'RO:0002607', 'RO:0003301', 'RO:0003303', 'RO:0003304', 'RO:0004013', 'RO:0004016', 'RO:HOM0000017', 'RO:HOM0000020', 'dc:source', 'sno:408094002'] 
);
CALL gds.alpha.ml.pipeline.linkPrediction.create('testpipeline');
CALL gds.alpha.ml.pipeline.linkPrediction.addNodeProperty('testpipeline', 'fastRP',{mutateProperty: 'embedding',  propertyRatio: 0.0, featureProperties: [], embeddingDimension: 512,iterationWeights: [1.0,1.0,1.0],normalizationStrength: -1.0, randomSeed:7687});
CALL gds.alpha.ml.pipeline.linkPrediction.addFeature('testpipeline', 'hadamard', {nodeProperties: ['embedding']});
CALL gds.alpha.ml.pipeline.linkPrediction.configureSplit('testpipeline',{negativeSamplingRatio: 15756.061003837,testFraction: 0.3, trainFraction: 0.3, validationFolds: 7});
CALL gds.alpha.ml.pipeline.linkPrediction.configureParams('testpipeline',[{tolerance: 0.001}, {tolerance: 0.01}, {maxEpochs: 500}]);
CALL gds.alpha.ml.pipeline.linkPrediction.train('Testgraph', {modelName: 'testmodel', pipeline: 'testpipeline', randomSeed: 7687, negativeClassWeight: 0.000063468}) YIELD modelInfo;


ServiceUnavailable: Could not perform discovery. No routing servers available. Known routing table: RoutingTable[database=neo4j, expirationTime=1666433795145, currentTime=1666433648366, routers=[], readers=[], writers=[]]

CALL gds.graph.project(
  'Testgraph',
  ['ANAT', 'DISO', 'GENE', 'GENO', 'NA', 'PHYS', 'VARI'],
  ['BFO:0000050', 'GENO:0000222', 'GENO:0000408', 'GENO:0000418', 'GENO:0000840', 'GO:0010629', 'NA', 'RO:0002200', 'RO:0002206', 'RO:0002325', 'RO:0002326', 'RO:0002327', 'RO:0002331', 'RO:0002434', 'RO:0002607', 'RO:0003301', 'RO:0003303', 'RO:0003304', 'RO:0004013', 'RO:0004016', 'RO:HOM0000017', 'RO:HOM0000020', 'dc:source'] 
);
CALL gds.beta.pipeline.linkPrediction.create('testpipeline');
CALL gds.beta.pipeline.linkPrediction.addNodeProperty('testpipeline', 'fastRP',{mutateProperty: 'embedding',  propertyRatio: 0.0, featureProperties: [], embeddingDimension: 512,iterationWeights: [1.0,1.0,1.0],normalizationStrength: -1.0, randomSeed:7687});
CALL gds.beta.pipeline.linkPrediction.addFeature('testpipeline', 'hadamard', {nodeProperties: ['embedding']});
CALL gds.beta.pipeline.linkPrediction.configureSplit('testpipeline',{negativeSamplingRatio: 15756.061003837,testFraction: 0.3, trainFraction: 0.3, validationFolds: 7});
CALL gds.beta.pipeline.linkPrediction.addRandomForest('testpipeline',{numberOfDecisionTrees: 10}) YIELD parameterSpace;
CALL gds.beta.pipeline.linkPrediction.train.estimate('Testgraph', {modelName: 'testmodel', pipeline: 'testpipeline', randomSeed: 7687, negativeClassWeight: 0.000063468, targetRelationshipType:'BFO:0000050'}) YIELD
